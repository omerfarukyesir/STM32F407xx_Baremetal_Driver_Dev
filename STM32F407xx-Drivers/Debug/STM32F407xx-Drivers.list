
STM32F407xx-Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008b8  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a40  08000a48  00001a48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a40  08000a40  00001a48  2**0
                  CONTENTS
  4 .ARM          00000000  08000a40  08000a40  00001a48  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a40  08000a48  00001a48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a40  08000a40  00001a40  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a44  08000a44  00001a44  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00001a48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001a48  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001a48  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a69  00000000  00000000  00001a78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002cd  00000000  00000000  000024e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  000027b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  00002878  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000020b5  00000000  00000000  00002904  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000110b  00000000  00000000  000049b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000091a4  00000000  00000000  00005ac4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000ec68  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000288  00000000  00000000  0000ecac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000061  00000000  00000000  0000ef34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000a28 	.word	0x08000a28

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000a28 	.word	0x08000a28

080001c8 <delay>:
#include "stm32f407xx_gpio.h"
#include "stm32f407xx.h"
#include <string.h>

void delay(void)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000/2; i++);
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <delay+0x12>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a04      	ldr	r2, [pc, #16]	@ (80001f0 <delay+0x28>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d9f8      	bls.n	80001d4 <delay+0xc>
}
 80001e2:	bf00      	nop
 80001e4:	bf00      	nop
 80001e6:	370c      	adds	r7, #12
 80001e8:	46bd      	mov	sp, r7
 80001ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001ee:	4770      	bx	lr
 80001f0:	0003d08f 	.word	0x0003d08f

080001f4 <main>:

int main(void)
{
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b086      	sub	sp, #24
 80001f8:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed, GpioBtn;

	/* ====== LED Configuration (PD12) ====== */
	memset(&GpioLed, 0, sizeof(GpioLed));
 80001fa:	f107 030c 	add.w	r3, r7, #12
 80001fe:	220c      	movs	r2, #12
 8000200:	2100      	movs	r1, #0
 8000202:	4618      	mov	r0, r3
 8000204:	f000 fbe4 	bl	80009d0 <memset>
	GpioLed.pGPIOx = GPIOD;
 8000208:	4b1b      	ldr	r3, [pc, #108]	@ (8000278 <main+0x84>)
 800020a:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800020c:	230c      	movs	r3, #12
 800020e:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 8000210:	2301      	movs	r3, #1
 8000212:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000214:	2302      	movs	r3, #2
 8000216:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000218:	2300      	movs	r3, #0
 800021a:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800021c:	2300      	movs	r3, #0
 800021e:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOD, ENABLE);
 8000220:	2101      	movs	r1, #1
 8000222:	4815      	ldr	r0, [pc, #84]	@ (8000278 <main+0x84>)
 8000224:	f000 f866 	bl	80002f4 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 8000228:	f107 030c 	add.w	r3, r7, #12
 800022c:	4618      	mov	r0, r3
 800022e:	f000 f949 	bl	80004c4 <GPIO_Init>

	/* ====== Button Configuration (PA0) ====== */
	memset(&GpioBtn, 0, sizeof(GpioBtn));
 8000232:	463b      	mov	r3, r7
 8000234:	220c      	movs	r2, #12
 8000236:	2100      	movs	r1, #0
 8000238:	4618      	mov	r0, r3
 800023a:	f000 fbc9 	bl	80009d0 <memset>
	GpioBtn.pGPIOx = GPIOA;
 800023e:	4b0f      	ldr	r3, [pc, #60]	@ (800027c <main+0x88>)
 8000240:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000242:	2300      	movs	r3, #0
 8000244:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT; // Interrupt at Falling Edge
 8000246:	2304      	movs	r3, #4
 8000248:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800024a:	2302      	movs	r3, #2
 800024c:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800024e:	2300      	movs	r3, #0
 8000250:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000252:	2101      	movs	r1, #1
 8000254:	4809      	ldr	r0, [pc, #36]	@ (800027c <main+0x88>)
 8000256:	f000 f84d 	bl	80002f4 <GPIO_PeriClockControl>
	GPIO_Init(&GpioBtn);
 800025a:	463b      	mov	r3, r7
 800025c:	4618      	mov	r0, r3
 800025e:	f000 f931 	bl	80004c4 <GPIO_Init>

	/* ====== IRQ Configuration ====== */
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI0, NVIC_IRQ_PRI15);
 8000262:	210f      	movs	r1, #15
 8000264:	2006      	movs	r0, #6
 8000266:	f000 fb69 	bl	800093c <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI0, ENABLE);
 800026a:	2101      	movs	r1, #1
 800026c:	2006      	movs	r0, #6
 800026e:	f000 fadf 	bl	8000830 <GPIO_IRQInterruptConfig>

	while(1);
 8000272:	bf00      	nop
 8000274:	e7fd      	b.n	8000272 <main+0x7e>
 8000276:	bf00      	nop
 8000278:	40020c00 	.word	0x40020c00
 800027c:	40020000 	.word	0x40020000

08000280 <EXTI0_IRQHandler>:

/*
 * Interrupt Service Routine for EXTI0 (connected to PA0)
 */
void EXTI0_IRQHandler(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
	delay();  // Debounce delay
 8000284:	f7ff ffa0 	bl	80001c8 <delay>
	GPIO_IRQHandling(GPIO_PIN_NO_0); // Clear pending bit
 8000288:	2000      	movs	r0, #0
 800028a:	f000 fb81 	bl	8000990 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12); // Toggle LED
 800028e:	210c      	movs	r1, #12
 8000290:	4802      	ldr	r0, [pc, #8]	@ (800029c <EXTI0_IRQHandler+0x1c>)
 8000292:	f000 fab7 	bl	8000804 <GPIO_ToggleOutputPin>
}
 8000296:	bf00      	nop
 8000298:	bd80      	pop	{r7, pc}
 800029a:	bf00      	nop
 800029c:	40020c00 	.word	0x40020c00

080002a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a0:	480d      	ldr	r0, [pc, #52]	@ (80002d8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002a2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002a4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a8:	480c      	ldr	r0, [pc, #48]	@ (80002dc <LoopForever+0x6>)
  ldr r1, =_edata
 80002aa:	490d      	ldr	r1, [pc, #52]	@ (80002e0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002ac:	4a0d      	ldr	r2, [pc, #52]	@ (80002e4 <LoopForever+0xe>)
  movs r3, #0
 80002ae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b0:	e002      	b.n	80002b8 <LoopCopyDataInit>

080002b2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002b2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002b6:	3304      	adds	r3, #4

080002b8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002bc:	d3f9      	bcc.n	80002b2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002be:	4a0a      	ldr	r2, [pc, #40]	@ (80002e8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002c0:	4c0a      	ldr	r4, [pc, #40]	@ (80002ec <LoopForever+0x16>)
  movs r3, #0
 80002c2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c4:	e001      	b.n	80002ca <LoopFillZerobss>

080002c6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002c6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c8:	3204      	adds	r2, #4

080002ca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002cc:	d3fb      	bcc.n	80002c6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ce:	f000 fb87 	bl	80009e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002d2:	f7ff ff8f 	bl	80001f4 <main>

080002d6 <LoopForever>:

LoopForever:
  b LoopForever
 80002d6:	e7fe      	b.n	80002d6 <LoopForever>
  ldr   r0, =_estack
 80002d8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e4:	08000a48 	.word	0x08000a48
  ldr r2, =_sbss
 80002e8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002ec:	2000001c 	.word	0x2000001c

080002f0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f0:	e7fe      	b.n	80002f0 <ADC_IRQHandler>
	...

080002f4 <GPIO_PeriClockControl>:
 * @return            - none
 *
 * @Note              - none
 *********************************************************************/
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002f4:	b480      	push	{r7}
 80002f6:	b083      	sub	sp, #12
 80002f8:	af00      	add	r7, sp, #0
 80002fa:	6078      	str	r0, [r7, #4]
 80002fc:	460b      	mov	r3, r1
 80002fe:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000300:	78fb      	ldrb	r3, [r7, #3]
 8000302:	2b01      	cmp	r3, #1
 8000304:	d162      	bne.n	80003cc <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	4a64      	ldr	r2, [pc, #400]	@ (800049c <GPIO_PeriClockControl+0x1a8>)
 800030a:	4293      	cmp	r3, r2
 800030c:	d106      	bne.n	800031c <GPIO_PeriClockControl+0x28>
			GPIOA_PCLK_EN();
 800030e:	4b64      	ldr	r3, [pc, #400]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000310:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000312:	4a63      	ldr	r2, [pc, #396]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000314:	f043 0301 	orr.w	r3, r3, #1
 8000318:	6313      	str	r3, [r2, #48]	@ 0x30
		else if(pGPIOx == GPIOH)
			GPIOH_PCLK_DI();
		else if(pGPIOx == GPIOI)
			GPIOI_PCLK_DI();
	}
}
 800031a:	e0b9      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB)
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	4a61      	ldr	r2, [pc, #388]	@ (80004a4 <GPIO_PeriClockControl+0x1b0>)
 8000320:	4293      	cmp	r3, r2
 8000322:	d106      	bne.n	8000332 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000324:	4b5e      	ldr	r3, [pc, #376]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000326:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000328:	4a5d      	ldr	r2, [pc, #372]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 800032a:	f043 0302 	orr.w	r3, r3, #2
 800032e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000330:	e0ae      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOC)
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	4a5c      	ldr	r2, [pc, #368]	@ (80004a8 <GPIO_PeriClockControl+0x1b4>)
 8000336:	4293      	cmp	r3, r2
 8000338:	d106      	bne.n	8000348 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800033a:	4b59      	ldr	r3, [pc, #356]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 800033c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800033e:	4a58      	ldr	r2, [pc, #352]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000340:	f043 0304 	orr.w	r3, r3, #4
 8000344:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000346:	e0a3      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOD)
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	4a58      	ldr	r2, [pc, #352]	@ (80004ac <GPIO_PeriClockControl+0x1b8>)
 800034c:	4293      	cmp	r3, r2
 800034e:	d106      	bne.n	800035e <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000350:	4b53      	ldr	r3, [pc, #332]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000352:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000354:	4a52      	ldr	r2, [pc, #328]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000356:	f043 0308 	orr.w	r3, r3, #8
 800035a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800035c:	e098      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOE)
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	4a53      	ldr	r2, [pc, #332]	@ (80004b0 <GPIO_PeriClockControl+0x1bc>)
 8000362:	4293      	cmp	r3, r2
 8000364:	d106      	bne.n	8000374 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000366:	4b4e      	ldr	r3, [pc, #312]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000368:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800036a:	4a4d      	ldr	r2, [pc, #308]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 800036c:	f043 0310 	orr.w	r3, r3, #16
 8000370:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000372:	e08d      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOF)
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	4a4f      	ldr	r2, [pc, #316]	@ (80004b4 <GPIO_PeriClockControl+0x1c0>)
 8000378:	4293      	cmp	r3, r2
 800037a:	d106      	bne.n	800038a <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 800037c:	4b48      	ldr	r3, [pc, #288]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 800037e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000380:	4a47      	ldr	r2, [pc, #284]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000382:	f043 0320 	orr.w	r3, r3, #32
 8000386:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000388:	e082      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOG)
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	4a4a      	ldr	r2, [pc, #296]	@ (80004b8 <GPIO_PeriClockControl+0x1c4>)
 800038e:	4293      	cmp	r3, r2
 8000390:	d106      	bne.n	80003a0 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000392:	4b43      	ldr	r3, [pc, #268]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000394:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000396:	4a42      	ldr	r2, [pc, #264]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000398:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800039c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800039e:	e077      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOH)
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	4a46      	ldr	r2, [pc, #280]	@ (80004bc <GPIO_PeriClockControl+0x1c8>)
 80003a4:	4293      	cmp	r3, r2
 80003a6:	d106      	bne.n	80003b6 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 80003a8:	4b3d      	ldr	r3, [pc, #244]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 80003aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ac:	4a3c      	ldr	r2, [pc, #240]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 80003ae:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80003b2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003b4:	e06c      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOI)
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	4a41      	ldr	r2, [pc, #260]	@ (80004c0 <GPIO_PeriClockControl+0x1cc>)
 80003ba:	4293      	cmp	r3, r2
 80003bc:	d168      	bne.n	8000490 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 80003be:	4b38      	ldr	r3, [pc, #224]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 80003c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003c2:	4a37      	ldr	r2, [pc, #220]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 80003c4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80003c8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003ca:	e061      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	4a33      	ldr	r2, [pc, #204]	@ (800049c <GPIO_PeriClockControl+0x1a8>)
 80003d0:	4293      	cmp	r3, r2
 80003d2:	d106      	bne.n	80003e2 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 80003d4:	4b32      	ldr	r3, [pc, #200]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 80003d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003d8:	4a31      	ldr	r2, [pc, #196]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 80003da:	f023 0301 	bic.w	r3, r3, #1
 80003de:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003e0:	e056      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB)
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	4a2f      	ldr	r2, [pc, #188]	@ (80004a4 <GPIO_PeriClockControl+0x1b0>)
 80003e6:	4293      	cmp	r3, r2
 80003e8:	d106      	bne.n	80003f8 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 80003ea:	4b2d      	ldr	r3, [pc, #180]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 80003ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ee:	4a2c      	ldr	r2, [pc, #176]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 80003f0:	f023 0302 	bic.w	r3, r3, #2
 80003f4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003f6:	e04b      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOC)
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	4a2b      	ldr	r2, [pc, #172]	@ (80004a8 <GPIO_PeriClockControl+0x1b4>)
 80003fc:	4293      	cmp	r3, r2
 80003fe:	d106      	bne.n	800040e <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 8000400:	4b27      	ldr	r3, [pc, #156]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000402:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000404:	4a26      	ldr	r2, [pc, #152]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000406:	f023 0304 	bic.w	r3, r3, #4
 800040a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800040c:	e040      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOD)
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	4a26      	ldr	r2, [pc, #152]	@ (80004ac <GPIO_PeriClockControl+0x1b8>)
 8000412:	4293      	cmp	r3, r2
 8000414:	d106      	bne.n	8000424 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 8000416:	4b22      	ldr	r3, [pc, #136]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000418:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800041a:	4a21      	ldr	r2, [pc, #132]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 800041c:	f023 0308 	bic.w	r3, r3, #8
 8000420:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000422:	e035      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOE)
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	4a22      	ldr	r2, [pc, #136]	@ (80004b0 <GPIO_PeriClockControl+0x1bc>)
 8000428:	4293      	cmp	r3, r2
 800042a:	d106      	bne.n	800043a <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 800042c:	4b1c      	ldr	r3, [pc, #112]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 800042e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000430:	4a1b      	ldr	r2, [pc, #108]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000432:	f023 0310 	bic.w	r3, r3, #16
 8000436:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000438:	e02a      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOF)
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	4a1d      	ldr	r2, [pc, #116]	@ (80004b4 <GPIO_PeriClockControl+0x1c0>)
 800043e:	4293      	cmp	r3, r2
 8000440:	d106      	bne.n	8000450 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 8000442:	4b17      	ldr	r3, [pc, #92]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000444:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000446:	4a16      	ldr	r2, [pc, #88]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000448:	f023 0320 	bic.w	r3, r3, #32
 800044c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800044e:	e01f      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOG)
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	4a19      	ldr	r2, [pc, #100]	@ (80004b8 <GPIO_PeriClockControl+0x1c4>)
 8000454:	4293      	cmp	r3, r2
 8000456:	d106      	bne.n	8000466 <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 8000458:	4b11      	ldr	r3, [pc, #68]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 800045a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800045c:	4a10      	ldr	r2, [pc, #64]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 800045e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000462:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000464:	e014      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOH)
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	4a14      	ldr	r2, [pc, #80]	@ (80004bc <GPIO_PeriClockControl+0x1c8>)
 800046a:	4293      	cmp	r3, r2
 800046c:	d106      	bne.n	800047c <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 800046e:	4b0c      	ldr	r3, [pc, #48]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000470:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000472:	4a0b      	ldr	r2, [pc, #44]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000474:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000478:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800047a:	e009      	b.n	8000490 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOI)
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	4a10      	ldr	r2, [pc, #64]	@ (80004c0 <GPIO_PeriClockControl+0x1cc>)
 8000480:	4293      	cmp	r3, r2
 8000482:	d105      	bne.n	8000490 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000484:	4b06      	ldr	r3, [pc, #24]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 8000486:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000488:	4a05      	ldr	r2, [pc, #20]	@ (80004a0 <GPIO_PeriClockControl+0x1ac>)
 800048a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800048e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000490:	bf00      	nop
 8000492:	370c      	adds	r7, #12
 8000494:	46bd      	mov	sp, r7
 8000496:	f85d 7b04 	ldr.w	r7, [sp], #4
 800049a:	4770      	bx	lr
 800049c:	40020000 	.word	0x40020000
 80004a0:	40023800 	.word	0x40023800
 80004a4:	40020400 	.word	0x40020400
 80004a8:	40020800 	.word	0x40020800
 80004ac:	40020c00 	.word	0x40020c00
 80004b0:	40021000 	.word	0x40021000
 80004b4:	40021400 	.word	0x40021400
 80004b8:	40021800 	.word	0x40021800
 80004bc:	40021c00 	.word	0x40021c00
 80004c0:	40022000 	.word	0x40022000

080004c4 <GPIO_Init>:
 * @return            - none
 *
 * @Note              - none
 *********************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80004c4:	b480      	push	{r7}
 80004c6:	b087      	sub	sp, #28
 80004c8:	af00      	add	r7, sp, #0
 80004ca:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0; // temporary register value
 80004cc:	2300      	movs	r3, #0
 80004ce:	617b      	str	r3, [r7, #20]

	// 1. Configure mode of GPIO pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	795b      	ldrb	r3, [r3, #5]
 80004d4:	2b03      	cmp	r3, #3
 80004d6:	d820      	bhi.n	800051a <GPIO_Init+0x56>
	{
		// Non-interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	795b      	ldrb	r3, [r3, #5]
 80004dc:	461a      	mov	r2, r3
			   (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	791b      	ldrb	r3, [r3, #4]
 80004e2:	005b      	lsls	r3, r3, #1
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<
 80004e4:	fa02 f303 	lsl.w	r3, r2, r3
 80004e8:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 <<
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	681a      	ldr	r2, [r3, #0]
			   (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // clear
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	791b      	ldrb	r3, [r3, #4]
 80004f4:	005b      	lsls	r3, r3, #1
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 <<
 80004f6:	2103      	movs	r1, #3
 80004f8:	fa01 f303 	lsl.w	r3, r1, r3
 80004fc:	43db      	mvns	r3, r3
 80004fe:	4619      	mov	r1, r3
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	400a      	ands	r2, r1
 8000506:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	6819      	ldr	r1, [r3, #0]
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	681b      	ldr	r3, [r3, #0]
 8000512:	697a      	ldr	r2, [r7, #20]
 8000514:	430a      	orrs	r2, r1
 8000516:	601a      	str	r2, [r3, #0]
 8000518:	e0cb      	b.n	80006b2 <GPIO_Init+0x1ee>
	}
	else
	{
		// Interrupt mode configuration
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	795b      	ldrb	r3, [r3, #5]
 800051e:	2b04      	cmp	r3, #4
 8000520:	d117      	bne.n	8000552 <GPIO_Init+0x8e>
		{
			// Configure FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000522:	4b4b      	ldr	r3, [pc, #300]	@ (8000650 <GPIO_Init+0x18c>)
 8000524:	68db      	ldr	r3, [r3, #12]
 8000526:	687a      	ldr	r2, [r7, #4]
 8000528:	7912      	ldrb	r2, [r2, #4]
 800052a:	4611      	mov	r1, r2
 800052c:	2201      	movs	r2, #1
 800052e:	408a      	lsls	r2, r1
 8000530:	4611      	mov	r1, r2
 8000532:	4a47      	ldr	r2, [pc, #284]	@ (8000650 <GPIO_Init+0x18c>)
 8000534:	430b      	orrs	r3, r1
 8000536:	60d3      	str	r3, [r2, #12]
			// Clear RTSR
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000538:	4b45      	ldr	r3, [pc, #276]	@ (8000650 <GPIO_Init+0x18c>)
 800053a:	689b      	ldr	r3, [r3, #8]
 800053c:	687a      	ldr	r2, [r7, #4]
 800053e:	7912      	ldrb	r2, [r2, #4]
 8000540:	4611      	mov	r1, r2
 8000542:	2201      	movs	r2, #1
 8000544:	408a      	lsls	r2, r1
 8000546:	43d2      	mvns	r2, r2
 8000548:	4611      	mov	r1, r2
 800054a:	4a41      	ldr	r2, [pc, #260]	@ (8000650 <GPIO_Init+0x18c>)
 800054c:	400b      	ands	r3, r1
 800054e:	6093      	str	r3, [r2, #8]
 8000550:	e035      	b.n	80005be <GPIO_Init+0xfa>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	795b      	ldrb	r3, [r3, #5]
 8000556:	2b05      	cmp	r3, #5
 8000558:	d117      	bne.n	800058a <GPIO_Init+0xc6>
		{
			// Configure RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800055a:	4b3d      	ldr	r3, [pc, #244]	@ (8000650 <GPIO_Init+0x18c>)
 800055c:	689b      	ldr	r3, [r3, #8]
 800055e:	687a      	ldr	r2, [r7, #4]
 8000560:	7912      	ldrb	r2, [r2, #4]
 8000562:	4611      	mov	r1, r2
 8000564:	2201      	movs	r2, #1
 8000566:	408a      	lsls	r2, r1
 8000568:	4611      	mov	r1, r2
 800056a:	4a39      	ldr	r2, [pc, #228]	@ (8000650 <GPIO_Init+0x18c>)
 800056c:	430b      	orrs	r3, r1
 800056e:	6093      	str	r3, [r2, #8]
			// Clear FTSR
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000570:	4b37      	ldr	r3, [pc, #220]	@ (8000650 <GPIO_Init+0x18c>)
 8000572:	68db      	ldr	r3, [r3, #12]
 8000574:	687a      	ldr	r2, [r7, #4]
 8000576:	7912      	ldrb	r2, [r2, #4]
 8000578:	4611      	mov	r1, r2
 800057a:	2201      	movs	r2, #1
 800057c:	408a      	lsls	r2, r1
 800057e:	43d2      	mvns	r2, r2
 8000580:	4611      	mov	r1, r2
 8000582:	4a33      	ldr	r2, [pc, #204]	@ (8000650 <GPIO_Init+0x18c>)
 8000584:	400b      	ands	r3, r1
 8000586:	60d3      	str	r3, [r2, #12]
 8000588:	e019      	b.n	80005be <GPIO_Init+0xfa>
		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	795b      	ldrb	r3, [r3, #5]
 800058e:	2b06      	cmp	r3, #6
 8000590:	d115      	bne.n	80005be <GPIO_Init+0xfa>
		{
			// Both edges
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000592:	4b2f      	ldr	r3, [pc, #188]	@ (8000650 <GPIO_Init+0x18c>)
 8000594:	689b      	ldr	r3, [r3, #8]
 8000596:	687a      	ldr	r2, [r7, #4]
 8000598:	7912      	ldrb	r2, [r2, #4]
 800059a:	4611      	mov	r1, r2
 800059c:	2201      	movs	r2, #1
 800059e:	408a      	lsls	r2, r1
 80005a0:	4611      	mov	r1, r2
 80005a2:	4a2b      	ldr	r2, [pc, #172]	@ (8000650 <GPIO_Init+0x18c>)
 80005a4:	430b      	orrs	r3, r1
 80005a6:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005a8:	4b29      	ldr	r3, [pc, #164]	@ (8000650 <GPIO_Init+0x18c>)
 80005aa:	68db      	ldr	r3, [r3, #12]
 80005ac:	687a      	ldr	r2, [r7, #4]
 80005ae:	7912      	ldrb	r2, [r2, #4]
 80005b0:	4611      	mov	r1, r2
 80005b2:	2201      	movs	r2, #1
 80005b4:	408a      	lsls	r2, r1
 80005b6:	4611      	mov	r1, r2
 80005b8:	4a25      	ldr	r2, [pc, #148]	@ (8000650 <GPIO_Init+0x18c>)
 80005ba:	430b      	orrs	r3, r1
 80005bc:	60d3      	str	r3, [r2, #12]
		}

		// 2. Configure GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	791b      	ldrb	r3, [r3, #4]
 80005c2:	089b      	lsrs	r3, r3, #2
 80005c4:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	791b      	ldrb	r3, [r3, #4]
 80005ca:	f003 0303 	and.w	r3, r3, #3
 80005ce:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	681b      	ldr	r3, [r3, #0]
 80005d4:	4a1f      	ldr	r2, [pc, #124]	@ (8000654 <GPIO_Init+0x190>)
 80005d6:	4293      	cmp	r3, r2
 80005d8:	d04e      	beq.n	8000678 <GPIO_Init+0x1b4>
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	681b      	ldr	r3, [r3, #0]
 80005de:	4a1e      	ldr	r2, [pc, #120]	@ (8000658 <GPIO_Init+0x194>)
 80005e0:	4293      	cmp	r3, r2
 80005e2:	d032      	beq.n	800064a <GPIO_Init+0x186>
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	4a1c      	ldr	r2, [pc, #112]	@ (800065c <GPIO_Init+0x198>)
 80005ea:	4293      	cmp	r3, r2
 80005ec:	d02b      	beq.n	8000646 <GPIO_Init+0x182>
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	4a1b      	ldr	r2, [pc, #108]	@ (8000660 <GPIO_Init+0x19c>)
 80005f4:	4293      	cmp	r3, r2
 80005f6:	d024      	beq.n	8000642 <GPIO_Init+0x17e>
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	4a19      	ldr	r2, [pc, #100]	@ (8000664 <GPIO_Init+0x1a0>)
 80005fe:	4293      	cmp	r3, r2
 8000600:	d01d      	beq.n	800063e <GPIO_Init+0x17a>
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	681b      	ldr	r3, [r3, #0]
 8000606:	4a18      	ldr	r2, [pc, #96]	@ (8000668 <GPIO_Init+0x1a4>)
 8000608:	4293      	cmp	r3, r2
 800060a:	d016      	beq.n	800063a <GPIO_Init+0x176>
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	4a16      	ldr	r2, [pc, #88]	@ (800066c <GPIO_Init+0x1a8>)
 8000612:	4293      	cmp	r3, r2
 8000614:	d00f      	beq.n	8000636 <GPIO_Init+0x172>
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	681b      	ldr	r3, [r3, #0]
 800061a:	4a15      	ldr	r2, [pc, #84]	@ (8000670 <GPIO_Init+0x1ac>)
 800061c:	4293      	cmp	r3, r2
 800061e:	d008      	beq.n	8000632 <GPIO_Init+0x16e>
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	681b      	ldr	r3, [r3, #0]
 8000624:	4a13      	ldr	r2, [pc, #76]	@ (8000674 <GPIO_Init+0x1b0>)
 8000626:	4293      	cmp	r3, r2
 8000628:	d101      	bne.n	800062e <GPIO_Init+0x16a>
 800062a:	2308      	movs	r3, #8
 800062c:	e025      	b.n	800067a <GPIO_Init+0x1b6>
 800062e:	2300      	movs	r3, #0
 8000630:	e023      	b.n	800067a <GPIO_Init+0x1b6>
 8000632:	2307      	movs	r3, #7
 8000634:	e021      	b.n	800067a <GPIO_Init+0x1b6>
 8000636:	2306      	movs	r3, #6
 8000638:	e01f      	b.n	800067a <GPIO_Init+0x1b6>
 800063a:	2305      	movs	r3, #5
 800063c:	e01d      	b.n	800067a <GPIO_Init+0x1b6>
 800063e:	2304      	movs	r3, #4
 8000640:	e01b      	b.n	800067a <GPIO_Init+0x1b6>
 8000642:	2303      	movs	r3, #3
 8000644:	e019      	b.n	800067a <GPIO_Init+0x1b6>
 8000646:	2302      	movs	r3, #2
 8000648:	e017      	b.n	800067a <GPIO_Init+0x1b6>
 800064a:	2301      	movs	r3, #1
 800064c:	e015      	b.n	800067a <GPIO_Init+0x1b6>
 800064e:	bf00      	nop
 8000650:	40013c00 	.word	0x40013c00
 8000654:	40020000 	.word	0x40020000
 8000658:	40020400 	.word	0x40020400
 800065c:	40020800 	.word	0x40020800
 8000660:	40020c00 	.word	0x40020c00
 8000664:	40021000 	.word	0x40021000
 8000668:	40021400 	.word	0x40021400
 800066c:	40021800 	.word	0x40021800
 8000670:	40021c00 	.word	0x40021c00
 8000674:	40022000 	.word	0x40022000
 8000678:	2300      	movs	r3, #0
 800067a:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 800067c:	4b5e      	ldr	r3, [pc, #376]	@ (80007f8 <GPIO_Init+0x334>)
 800067e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000680:	4a5d      	ldr	r2, [pc, #372]	@ (80007f8 <GPIO_Init+0x334>)
 8000682:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000686:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 8000688:	7c7a      	ldrb	r2, [r7, #17]
 800068a:	7cbb      	ldrb	r3, [r7, #18]
 800068c:	009b      	lsls	r3, r3, #2
 800068e:	fa02 f103 	lsl.w	r1, r2, r3
 8000692:	4a5a      	ldr	r2, [pc, #360]	@ (80007fc <GPIO_Init+0x338>)
 8000694:	7cfb      	ldrb	r3, [r7, #19]
 8000696:	3302      	adds	r3, #2
 8000698:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		// 3. Enable EXTI interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800069c:	4b58      	ldr	r3, [pc, #352]	@ (8000800 <GPIO_Init+0x33c>)
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	687a      	ldr	r2, [r7, #4]
 80006a2:	7912      	ldrb	r2, [r2, #4]
 80006a4:	4611      	mov	r1, r2
 80006a6:	2201      	movs	r2, #1
 80006a8:	408a      	lsls	r2, r1
 80006aa:	4611      	mov	r1, r2
 80006ac:	4a54      	ldr	r2, [pc, #336]	@ (8000800 <GPIO_Init+0x33c>)
 80006ae:	430b      	orrs	r3, r1
 80006b0:	6013      	str	r3, [r2, #0]
	}

	temp = 0;
 80006b2:	2300      	movs	r3, #0
 80006b4:	617b      	str	r3, [r7, #20]

	// 2. Configure speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed <<
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	799b      	ldrb	r3, [r3, #6]
 80006ba:	461a      	mov	r2, r3
		   (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	791b      	ldrb	r3, [r3, #4]
 80006c0:	005b      	lsls	r3, r3, #1
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed <<
 80006c2:	fa02 f303 	lsl.w	r3, r2, r3
 80006c6:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 <<
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	681b      	ldr	r3, [r3, #0]
 80006cc:	689a      	ldr	r2, [r3, #8]
		   (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	791b      	ldrb	r3, [r3, #4]
 80006d2:	005b      	lsls	r3, r3, #1
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 <<
 80006d4:	2103      	movs	r1, #3
 80006d6:	fa01 f303 	lsl.w	r3, r1, r3
 80006da:	43db      	mvns	r3, r3
 80006dc:	4619      	mov	r1, r3
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	681b      	ldr	r3, [r3, #0]
 80006e2:	400a      	ands	r2, r1
 80006e4:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006e6:	687b      	ldr	r3, [r7, #4]
 80006e8:	681b      	ldr	r3, [r3, #0]
 80006ea:	6899      	ldr	r1, [r3, #8]
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	681b      	ldr	r3, [r3, #0]
 80006f0:	697a      	ldr	r2, [r7, #20]
 80006f2:	430a      	orrs	r2, r1
 80006f4:	609a      	str	r2, [r3, #8]

	temp = 0;
 80006f6:	2300      	movs	r3, #0
 80006f8:	617b      	str	r3, [r7, #20]

	// 3. Configure pull-up/pull-down
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl <<
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	79db      	ldrb	r3, [r3, #7]
 80006fe:	461a      	mov	r2, r3
		   (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000700:	687b      	ldr	r3, [r7, #4]
 8000702:	791b      	ldrb	r3, [r3, #4]
 8000704:	005b      	lsls	r3, r3, #1
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl <<
 8000706:	fa02 f303 	lsl.w	r3, r2, r3
 800070a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 <<
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	681b      	ldr	r3, [r3, #0]
 8000710:	68da      	ldr	r2, [r3, #12]
		   (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000712:	687b      	ldr	r3, [r7, #4]
 8000714:	791b      	ldrb	r3, [r3, #4]
 8000716:	005b      	lsls	r3, r3, #1
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 <<
 8000718:	2103      	movs	r1, #3
 800071a:	fa01 f303 	lsl.w	r3, r1, r3
 800071e:	43db      	mvns	r3, r3
 8000720:	4619      	mov	r1, r3
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	681b      	ldr	r3, [r3, #0]
 8000726:	400a      	ands	r2, r1
 8000728:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 800072a:	687b      	ldr	r3, [r7, #4]
 800072c:	681b      	ldr	r3, [r3, #0]
 800072e:	68d9      	ldr	r1, [r3, #12]
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	681b      	ldr	r3, [r3, #0]
 8000734:	697a      	ldr	r2, [r7, #20]
 8000736:	430a      	orrs	r2, r1
 8000738:	60da      	str	r2, [r3, #12]

	temp = 0;
 800073a:	2300      	movs	r3, #0
 800073c:	617b      	str	r3, [r7, #20]

	// 4. Configure output type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType <<
 800073e:	687b      	ldr	r3, [r7, #4]
 8000740:	7a1b      	ldrb	r3, [r3, #8]
 8000742:	461a      	mov	r2, r3
		   (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000744:	687b      	ldr	r3, [r7, #4]
 8000746:	791b      	ldrb	r3, [r3, #4]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType <<
 8000748:	fa02 f303 	lsl.w	r3, r2, r3
 800074c:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 <<
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	681b      	ldr	r3, [r3, #0]
 8000752:	685a      	ldr	r2, [r3, #4]
		   (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000754:	687b      	ldr	r3, [r7, #4]
 8000756:	791b      	ldrb	r3, [r3, #4]
 8000758:	4619      	mov	r1, r3
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 <<
 800075a:	2301      	movs	r3, #1
 800075c:	408b      	lsls	r3, r1
 800075e:	43db      	mvns	r3, r3
 8000760:	4619      	mov	r1, r3
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	681b      	ldr	r3, [r3, #0]
 8000766:	400a      	ands	r2, r1
 8000768:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 800076a:	687b      	ldr	r3, [r7, #4]
 800076c:	681b      	ldr	r3, [r3, #0]
 800076e:	6859      	ldr	r1, [r3, #4]
 8000770:	687b      	ldr	r3, [r7, #4]
 8000772:	681b      	ldr	r3, [r3, #0]
 8000774:	697a      	ldr	r2, [r7, #20]
 8000776:	430a      	orrs	r2, r1
 8000778:	605a      	str	r2, [r3, #4]

	temp = 0;
 800077a:	2300      	movs	r3, #0
 800077c:	617b      	str	r3, [r7, #20]

	// 5. Configure alternate functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	795b      	ldrb	r3, [r3, #5]
 8000782:	2b02      	cmp	r3, #2
 8000784:	d131      	bne.n	80007ea <GPIO_Init+0x326>
	{
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000786:	687b      	ldr	r3, [r7, #4]
 8000788:	791b      	ldrb	r3, [r3, #4]
 800078a:	08db      	lsrs	r3, r3, #3
 800078c:	743b      	strb	r3, [r7, #16]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800078e:	687b      	ldr	r3, [r7, #4]
 8000790:	791b      	ldrb	r3, [r3, #4]
 8000792:	f003 0307 	and.w	r3, r3, #7
 8000796:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2));
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	7c3a      	ldrb	r2, [r7, #16]
 800079e:	3208      	adds	r2, #8
 80007a0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007a4:	7bfb      	ldrb	r3, [r7, #15]
 80007a6:	009b      	lsls	r3, r3, #2
 80007a8:	220f      	movs	r2, #15
 80007aa:	fa02 f303 	lsl.w	r3, r2, r3
 80007ae:	43db      	mvns	r3, r3
 80007b0:	4618      	mov	r0, r3
 80007b2:	687b      	ldr	r3, [r7, #4]
 80007b4:	681b      	ldr	r3, [r3, #0]
 80007b6:	7c3a      	ldrb	r2, [r7, #16]
 80007b8:	4001      	ands	r1, r0
 80007ba:	3208      	adds	r2, #8
 80007bc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |=
 80007c0:	687b      	ldr	r3, [r7, #4]
 80007c2:	681b      	ldr	r3, [r3, #0]
 80007c4:	7c3a      	ldrb	r2, [r7, #16]
 80007c6:	3208      	adds	r2, #8
 80007c8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
			(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	7a5b      	ldrb	r3, [r3, #9]
 80007d0:	461a      	mov	r2, r3
 80007d2:	7bfb      	ldrb	r3, [r7, #15]
 80007d4:	009b      	lsls	r3, r3, #2
 80007d6:	fa02 f303 	lsl.w	r3, r2, r3
 80007da:	4618      	mov	r0, r3
		pGPIOHandle->pGPIOx->AFR[temp1] |=
 80007dc:	687b      	ldr	r3, [r7, #4]
 80007de:	681b      	ldr	r3, [r3, #0]
 80007e0:	7c3a      	ldrb	r2, [r7, #16]
 80007e2:	4301      	orrs	r1, r0
 80007e4:	3208      	adds	r2, #8
 80007e6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80007ea:	bf00      	nop
 80007ec:	371c      	adds	r7, #28
 80007ee:	46bd      	mov	sp, r7
 80007f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007f4:	4770      	bx	lr
 80007f6:	bf00      	nop
 80007f8:	40023800 	.word	0x40023800
 80007fc:	40013800 	.word	0x40013800
 8000800:	40013c00 	.word	0x40013c00

08000804 <GPIO_ToggleOutputPin>:
 *
 * @Note        - None
 *
 *****************************************************************/
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000804:	b480      	push	{r7}
 8000806:	b083      	sub	sp, #12
 8000808:	af00      	add	r7, sp, #0
 800080a:	6078      	str	r0, [r7, #4]
 800080c:	460b      	mov	r3, r1
 800080e:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000810:	687b      	ldr	r3, [r7, #4]
 8000812:	695b      	ldr	r3, [r3, #20]
 8000814:	78fa      	ldrb	r2, [r7, #3]
 8000816:	2101      	movs	r1, #1
 8000818:	fa01 f202 	lsl.w	r2, r1, r2
 800081c:	405a      	eors	r2, r3
 800081e:	687b      	ldr	r3, [r7, #4]
 8000820:	615a      	str	r2, [r3, #20]
}
 8000822:	bf00      	nop
 8000824:	370c      	adds	r7, #12
 8000826:	46bd      	mov	sp, r7
 8000828:	f85d 7b04 	ldr.w	r7, [sp], #4
 800082c:	4770      	bx	lr
	...

08000830 <GPIO_IRQInterruptConfig>:
 *
 * @Note        - None
 *
 *****************************************************************/
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000830:	b480      	push	{r7}
 8000832:	b083      	sub	sp, #12
 8000834:	af00      	add	r7, sp, #0
 8000836:	4603      	mov	r3, r0
 8000838:	460a      	mov	r2, r1
 800083a:	71fb      	strb	r3, [r7, #7]
 800083c:	4613      	mov	r3, r2
 800083e:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE)
 8000840:	79bb      	ldrb	r3, [r7, #6]
 8000842:	2b01      	cmp	r3, #1
 8000844:	d133      	bne.n	80008ae <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <= 31)
 8000846:	79fb      	ldrb	r3, [r7, #7]
 8000848:	2b1f      	cmp	r3, #31
 800084a:	d80a      	bhi.n	8000862 <GPIO_IRQInterruptConfig+0x32>
			*NVIC_ISER0 |= (1 << IRQNumber);
 800084c:	4b35      	ldr	r3, [pc, #212]	@ (8000924 <GPIO_IRQInterruptConfig+0xf4>)
 800084e:	681b      	ldr	r3, [r3, #0]
 8000850:	79fa      	ldrb	r2, [r7, #7]
 8000852:	2101      	movs	r1, #1
 8000854:	fa01 f202 	lsl.w	r2, r1, r2
 8000858:	4611      	mov	r1, r2
 800085a:	4a32      	ldr	r2, [pc, #200]	@ (8000924 <GPIO_IRQInterruptConfig+0xf4>)
 800085c:	430b      	orrs	r3, r1
 800085e:	6013      	str	r3, [r2, #0]
		else if(IRQNumber > 31 && IRQNumber < 64)
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
		else if(IRQNumber >= 64 && IRQNumber < 96)
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
	}
}
 8000860:	e059      	b.n	8000916 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber > 31 && IRQNumber < 64)
 8000862:	79fb      	ldrb	r3, [r7, #7]
 8000864:	2b1f      	cmp	r3, #31
 8000866:	d90f      	bls.n	8000888 <GPIO_IRQInterruptConfig+0x58>
 8000868:	79fb      	ldrb	r3, [r7, #7]
 800086a:	2b3f      	cmp	r3, #63	@ 0x3f
 800086c:	d80c      	bhi.n	8000888 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 800086e:	4b2e      	ldr	r3, [pc, #184]	@ (8000928 <GPIO_IRQInterruptConfig+0xf8>)
 8000870:	681b      	ldr	r3, [r3, #0]
 8000872:	79fa      	ldrb	r2, [r7, #7]
 8000874:	f002 021f 	and.w	r2, r2, #31
 8000878:	2101      	movs	r1, #1
 800087a:	fa01 f202 	lsl.w	r2, r1, r2
 800087e:	4611      	mov	r1, r2
 8000880:	4a29      	ldr	r2, [pc, #164]	@ (8000928 <GPIO_IRQInterruptConfig+0xf8>)
 8000882:	430b      	orrs	r3, r1
 8000884:	6013      	str	r3, [r2, #0]
 8000886:	e046      	b.n	8000916 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96)
 8000888:	79fb      	ldrb	r3, [r7, #7]
 800088a:	2b3f      	cmp	r3, #63	@ 0x3f
 800088c:	d943      	bls.n	8000916 <GPIO_IRQInterruptConfig+0xe6>
 800088e:	79fb      	ldrb	r3, [r7, #7]
 8000890:	2b5f      	cmp	r3, #95	@ 0x5f
 8000892:	d840      	bhi.n	8000916 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1 << (IRQNumber % 64));
 8000894:	4b25      	ldr	r3, [pc, #148]	@ (800092c <GPIO_IRQInterruptConfig+0xfc>)
 8000896:	681b      	ldr	r3, [r3, #0]
 8000898:	79fa      	ldrb	r2, [r7, #7]
 800089a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 800089e:	2101      	movs	r1, #1
 80008a0:	fa01 f202 	lsl.w	r2, r1, r2
 80008a4:	4611      	mov	r1, r2
 80008a6:	4a21      	ldr	r2, [pc, #132]	@ (800092c <GPIO_IRQInterruptConfig+0xfc>)
 80008a8:	430b      	orrs	r3, r1
 80008aa:	6013      	str	r3, [r2, #0]
}
 80008ac:	e033      	b.n	8000916 <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31)
 80008ae:	79fb      	ldrb	r3, [r7, #7]
 80008b0:	2b1f      	cmp	r3, #31
 80008b2:	d80a      	bhi.n	80008ca <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 80008b4:	4b1e      	ldr	r3, [pc, #120]	@ (8000930 <GPIO_IRQInterruptConfig+0x100>)
 80008b6:	681b      	ldr	r3, [r3, #0]
 80008b8:	79fa      	ldrb	r2, [r7, #7]
 80008ba:	2101      	movs	r1, #1
 80008bc:	fa01 f202 	lsl.w	r2, r1, r2
 80008c0:	4611      	mov	r1, r2
 80008c2:	4a1b      	ldr	r2, [pc, #108]	@ (8000930 <GPIO_IRQInterruptConfig+0x100>)
 80008c4:	430b      	orrs	r3, r1
 80008c6:	6013      	str	r3, [r2, #0]
}
 80008c8:	e025      	b.n	8000916 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber > 31 && IRQNumber < 64)
 80008ca:	79fb      	ldrb	r3, [r7, #7]
 80008cc:	2b1f      	cmp	r3, #31
 80008ce:	d90f      	bls.n	80008f0 <GPIO_IRQInterruptConfig+0xc0>
 80008d0:	79fb      	ldrb	r3, [r7, #7]
 80008d2:	2b3f      	cmp	r3, #63	@ 0x3f
 80008d4:	d80c      	bhi.n	80008f0 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
 80008d6:	4b17      	ldr	r3, [pc, #92]	@ (8000934 <GPIO_IRQInterruptConfig+0x104>)
 80008d8:	681b      	ldr	r3, [r3, #0]
 80008da:	79fa      	ldrb	r2, [r7, #7]
 80008dc:	f002 021f 	and.w	r2, r2, #31
 80008e0:	2101      	movs	r1, #1
 80008e2:	fa01 f202 	lsl.w	r2, r1, r2
 80008e6:	4611      	mov	r1, r2
 80008e8:	4a12      	ldr	r2, [pc, #72]	@ (8000934 <GPIO_IRQInterruptConfig+0x104>)
 80008ea:	430b      	orrs	r3, r1
 80008ec:	6013      	str	r3, [r2, #0]
 80008ee:	e012      	b.n	8000916 <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96)
 80008f0:	79fb      	ldrb	r3, [r7, #7]
 80008f2:	2b3f      	cmp	r3, #63	@ 0x3f
 80008f4:	d90f      	bls.n	8000916 <GPIO_IRQInterruptConfig+0xe6>
 80008f6:	79fb      	ldrb	r3, [r7, #7]
 80008f8:	2b5f      	cmp	r3, #95	@ 0x5f
 80008fa:	d80c      	bhi.n	8000916 <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
 80008fc:	4b0e      	ldr	r3, [pc, #56]	@ (8000938 <GPIO_IRQInterruptConfig+0x108>)
 80008fe:	681b      	ldr	r3, [r3, #0]
 8000900:	79fa      	ldrb	r2, [r7, #7]
 8000902:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8000906:	2101      	movs	r1, #1
 8000908:	fa01 f202 	lsl.w	r2, r1, r2
 800090c:	4611      	mov	r1, r2
 800090e:	4a0a      	ldr	r2, [pc, #40]	@ (8000938 <GPIO_IRQInterruptConfig+0x108>)
 8000910:	430b      	orrs	r3, r1
 8000912:	6013      	str	r3, [r2, #0]
}
 8000914:	e7ff      	b.n	8000916 <GPIO_IRQInterruptConfig+0xe6>
 8000916:	bf00      	nop
 8000918:	370c      	adds	r7, #12
 800091a:	46bd      	mov	sp, r7
 800091c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000920:	4770      	bx	lr
 8000922:	bf00      	nop
 8000924:	e000e100 	.word	0xe000e100
 8000928:	e000e104 	.word	0xe000e104
 800092c:	e000e108 	.word	0xe000e108
 8000930:	e000e180 	.word	0xe000e180
 8000934:	e000e184 	.word	0xe000e184
 8000938:	e000e188 	.word	0xe000e188

0800093c <GPIO_IRQPriorityConfig>:
 *
 * @Note        - None
 *
 *****************************************************************/
void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
{
 800093c:	b480      	push	{r7}
 800093e:	b085      	sub	sp, #20
 8000940:	af00      	add	r7, sp, #0
 8000942:	4603      	mov	r3, r0
 8000944:	6039      	str	r1, [r7, #0]
 8000946:	71fb      	strb	r3, [r7, #7]
	uint8_t iprx = IRQNumber / 4;
 8000948:	79fb      	ldrb	r3, [r7, #7]
 800094a:	089b      	lsrs	r3, r3, #2
 800094c:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 800094e:	79fb      	ldrb	r3, [r7, #7]
 8000950:	f003 0303 	and.w	r3, r3, #3
 8000954:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 8000956:	7bbb      	ldrb	r3, [r7, #14]
 8000958:	00db      	lsls	r3, r3, #3
 800095a:	b2db      	uxtb	r3, r3
 800095c:	3304      	adds	r3, #4
 800095e:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + iprx) |= (IRQPriority << shift_amount);
 8000960:	7bfb      	ldrb	r3, [r7, #15]
 8000962:	009b      	lsls	r3, r3, #2
 8000964:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000968:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 800096c:	6819      	ldr	r1, [r3, #0]
 800096e:	7b7b      	ldrb	r3, [r7, #13]
 8000970:	683a      	ldr	r2, [r7, #0]
 8000972:	409a      	lsls	r2, r3
 8000974:	7bfb      	ldrb	r3, [r7, #15]
 8000976:	009b      	lsls	r3, r3, #2
 8000978:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 800097c:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000980:	430a      	orrs	r2, r1
 8000982:	601a      	str	r2, [r3, #0]
}
 8000984:	bf00      	nop
 8000986:	3714      	adds	r7, #20
 8000988:	46bd      	mov	sp, r7
 800098a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800098e:	4770      	bx	lr

08000990 <GPIO_IRQHandling>:
 *
 * @Note        - None
 *
 *****************************************************************/
void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000990:	b480      	push	{r7}
 8000992:	b083      	sub	sp, #12
 8000994:	af00      	add	r7, sp, #0
 8000996:	4603      	mov	r3, r0
 8000998:	71fb      	strb	r3, [r7, #7]
	// Clear EXTI pending register corresponding bit
	if(EXTI->PR & (1 << PinNumber))
 800099a:	4b0c      	ldr	r3, [pc, #48]	@ (80009cc <GPIO_IRQHandling+0x3c>)
 800099c:	695b      	ldr	r3, [r3, #20]
 800099e:	79fa      	ldrb	r2, [r7, #7]
 80009a0:	2101      	movs	r1, #1
 80009a2:	fa01 f202 	lsl.w	r2, r1, r2
 80009a6:	4013      	ands	r3, r2
 80009a8:	2b00      	cmp	r3, #0
 80009aa:	d009      	beq.n	80009c0 <GPIO_IRQHandling+0x30>
	{
		// Clear by writing 1
		EXTI->PR |= (1 << PinNumber);
 80009ac:	4b07      	ldr	r3, [pc, #28]	@ (80009cc <GPIO_IRQHandling+0x3c>)
 80009ae:	695b      	ldr	r3, [r3, #20]
 80009b0:	79fa      	ldrb	r2, [r7, #7]
 80009b2:	2101      	movs	r1, #1
 80009b4:	fa01 f202 	lsl.w	r2, r1, r2
 80009b8:	4611      	mov	r1, r2
 80009ba:	4a04      	ldr	r2, [pc, #16]	@ (80009cc <GPIO_IRQHandling+0x3c>)
 80009bc:	430b      	orrs	r3, r1
 80009be:	6153      	str	r3, [r2, #20]
	}
}
 80009c0:	bf00      	nop
 80009c2:	370c      	adds	r7, #12
 80009c4:	46bd      	mov	sp, r7
 80009c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009ca:	4770      	bx	lr
 80009cc:	40013c00 	.word	0x40013c00

080009d0 <memset>:
 80009d0:	4402      	add	r2, r0
 80009d2:	4603      	mov	r3, r0
 80009d4:	4293      	cmp	r3, r2
 80009d6:	d100      	bne.n	80009da <memset+0xa>
 80009d8:	4770      	bx	lr
 80009da:	f803 1b01 	strb.w	r1, [r3], #1
 80009de:	e7f9      	b.n	80009d4 <memset+0x4>

080009e0 <__libc_init_array>:
 80009e0:	b570      	push	{r4, r5, r6, lr}
 80009e2:	4d0d      	ldr	r5, [pc, #52]	@ (8000a18 <__libc_init_array+0x38>)
 80009e4:	4c0d      	ldr	r4, [pc, #52]	@ (8000a1c <__libc_init_array+0x3c>)
 80009e6:	1b64      	subs	r4, r4, r5
 80009e8:	10a4      	asrs	r4, r4, #2
 80009ea:	2600      	movs	r6, #0
 80009ec:	42a6      	cmp	r6, r4
 80009ee:	d109      	bne.n	8000a04 <__libc_init_array+0x24>
 80009f0:	4d0b      	ldr	r5, [pc, #44]	@ (8000a20 <__libc_init_array+0x40>)
 80009f2:	4c0c      	ldr	r4, [pc, #48]	@ (8000a24 <__libc_init_array+0x44>)
 80009f4:	f000 f818 	bl	8000a28 <_init>
 80009f8:	1b64      	subs	r4, r4, r5
 80009fa:	10a4      	asrs	r4, r4, #2
 80009fc:	2600      	movs	r6, #0
 80009fe:	42a6      	cmp	r6, r4
 8000a00:	d105      	bne.n	8000a0e <__libc_init_array+0x2e>
 8000a02:	bd70      	pop	{r4, r5, r6, pc}
 8000a04:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a08:	4798      	blx	r3
 8000a0a:	3601      	adds	r6, #1
 8000a0c:	e7ee      	b.n	80009ec <__libc_init_array+0xc>
 8000a0e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a12:	4798      	blx	r3
 8000a14:	3601      	adds	r6, #1
 8000a16:	e7f2      	b.n	80009fe <__libc_init_array+0x1e>
 8000a18:	08000a40 	.word	0x08000a40
 8000a1c:	08000a40 	.word	0x08000a40
 8000a20:	08000a40 	.word	0x08000a40
 8000a24:	08000a44 	.word	0x08000a44

08000a28 <_init>:
 8000a28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a2a:	bf00      	nop
 8000a2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a2e:	bc08      	pop	{r3}
 8000a30:	469e      	mov	lr, r3
 8000a32:	4770      	bx	lr

08000a34 <_fini>:
 8000a34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a36:	bf00      	nop
 8000a38:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a3a:	bc08      	pop	{r3}
 8000a3c:	469e      	mov	lr, r3
 8000a3e:	4770      	bx	lr
